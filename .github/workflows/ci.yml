name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:

  lint-build:
    name: Linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dev dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U black flake8 invoke
    - name: Lint
      shell: bash
      run: |
          invoke checkformat
          invoke lint

  test-builds:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Python versions
          - name: Linux py39
            os: ubuntu-latest
            pyversion: '3.9'
          - name: Linux py310
            os: ubuntu-latest
            pyversion: '3.10'
          - name: Linux py311
            os: ubuntu-latest
            pyversion: '3.11'
          - name: Linux py312
            os: ubuntu-latest
            pyversion: '3.12'
          - name: Linux py313
            os: ubuntu-latest
            pyversion: '3.13'
          # OS's and platforms
          - name: Linux pypy39
            os: ubuntu-latest
            pyversion: 'pypy3.9'
          - name: Windows py311
            os: windows-latest
            pyversion: '3.11'
          - name: MacOS py311
            os: macos-latest
            pyversion: '3.11'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.pyversion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Install dependencies
        shell: bash
        run: |
            python -m pip install --upgrade pip
            pip install setuptools
            pip install -U -r requirements.txt
            pip install pytest
            python setup.py install
            rm -rf ./timetagger_cli ./build ./egg-info
      - name: Test with pytest
        shell: bash
        run: |
            python -c "import sys; print(sys.version, '\n', sys.prefix)";
            pytest -v .
